import * as React from "react";
import ToggleButton from "@mui/material/ToggleButton";
import ToggleButtonGroup from "@mui/material/ToggleButtonGroup";
import Box from "@mui/material/Box";
import {
  Button,
  ButtonGroup,
  Typography,
  useMediaQuery,
  useTheme,
} from "@mui/material";
import LocationOnIcon from "@mui/icons-material/LocationOn"; // Import icon Google Maps
import { motion } from "framer-motion";
import { useSearchParams } from "react-router-dom";
import { guests } from "../../models/guests";

const Invitations = () => {
  const [searchParams] = useSearchParams();
  const name = searchParams.get("name");
  const lowerName = name?.toLowerCase();
  // Ki·ªÉm tra xem kh√°ch c√≥ trong danh s√°ch kh√¥ng
  const guest = guests.find((g) => g.Guest_Code.toLowerCase() === lowerName);
  const side = guest?.Friend === "Groom" ? true : false;
  const side_Groom = guest?.Invite_Side === "Groom" ? true : false;
  const [alignment, setAlignment] = React.useState(side ? "left" : "right");
  const [isSide, setIsSide] = React.useState(side);
  const [isSide_Groom] = React.useState(side_Groom);
  const [selected, setSelected] = React.useState(isSide_Groom);
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("sm")); // Ki·ªÉm tra n·∫øu m√†n h√¨nh l√† mobile

  const [showFullGroom, setShowFullGroom] = React.useState(false);
  const [showFullBride, setShowFullBride] = React.useState(false);

  const textRef = React.useRef(null);

  const groomText =
    'The groom, B√πi Trung Nam, born on May 11, 1997, under the sign of Taurus, epitomizes determination, hard work, and reliability. Nam carries a strong sense of responsibility and once he sets his mind on something, he follows through to the end. Though he can be a bit "stubborn" at times, his sincerity and warm-hearted nature shine through. His gentle smile has a way of making everyone around him feel at ease.Currently, Nam excels as an integrated circuit design engineer, a role demanding both meticulous attention to detail and creativity. Despite his calm and composed demeanor, he delights in secretly planning surprises for his beloved, as her happiness remains his greatest achievement.';
  const brideText =
    "The bride, Nguy·ªÖn Th·ªã Ng·ªçc, born on April 9, 1998, under the sign of Aries, embodies strength, independence, and boundless passion. Ng·ªçc's intelligence and adaptability make her a force to be reckoned with, while her decisiveness adds a touch of determination to her bold personality. Yet, beneath this exterior lies a sincere heart full of warmth and love.As a talented programmer, Ng·ªçc transforms the seemingly dry world of code into a vibrant 'creative playground.' While Nam meticulously designs precise ICs, Ng·ªçc programs the delightful surprises that life has to offer. By Nam's side, she always finds a sense of peace and contentment";

  const handleChange = (event, newAlignment) => {
    // Ki·ªÉm tra n·∫øu button m·ªõi ƒë∆∞·ª£c ch·ªçn kh√°c v·ªõi button hi·ªán t·∫°i
    if (newAlignment !== alignment) {
      setAlignment(newAlignment);
      setIsSide(newAlignment === "left");
      setSelected(newAlignment === "left");
      setShowFullGroom(false);
      setShowFullBride(false);
    }
  };

  return (
    <Box
      sx={{
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        height: "100%",
        gap: 2,
        paddingTop: 4,
        paddingBottom: 4,
        backgroundImage: "url('/imgs/background_Confirm.webp')",
        backgroundSize: "cover",
        backgroundPosition: "center",
      }}
    >
      {/* N√∫t Nh√† G√°i - Nh√† Trai */}
      <ToggleButtonGroup
        value={alignment}
        exclusive
        onChange={handleChange}
        aria-label="text alignment"
        sx={{
          display: "flex",
          justifyContent: "center",
          "& .MuiToggleButton-root": {
            flex: 1, // Chia ƒë·ªÅu kh√¥ng gian nh∆∞ng ch·ªâ m·ªü r·ªông khi c·∫ßn
            minWidth: "max-content", // Ch·ªâ m·ªü r·ªông theo n·ªôi dung, kh√¥ng d∆∞ th·ª´a
            padding: "8px 16px",
            color: "white",
            backgroundColor: "#a5a8a5",
            textTransform: "none",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            gap: "8px",
            transition: "all 0.3s ease",
            fontWeight: "bold", // Duy tr√¨ ch·ªØ in ƒë·∫≠m ƒë·ªÉ tr√°nh thay ƒë·ªïi k√≠ch th∆∞·ªõc khi ch·ªçn
            whiteSpace: "nowrap", // Gi·ªØ ch·ªØ tr√™n m·ªôt d√≤ng
            "&:hover": {
              backgroundColor: "#35923a !important",
            },
            "&.Mui-selected": {
              backgroundColor: "#1f7822",
              color: "white",
            },
          },
          paddingRight: 1,
        }}
      >
        <ToggleButton
          value="left"
          sx={{
            borderRadius: "8px 0 0 8px",
            borderRight: "2px solid #e9f0e9",
          }}
        >
          <Box component="span" sx={{ fontSize: "1.5em", lineHeight: 0 }}>
            üè°
          </Box>
          Groom's Family
        </ToggleButton>

        <ToggleButton
          value="right"
          sx={{
            borderRadius: "0 8px 8px 0",
          }}
        >
          <Box component="span" sx={{ fontSize: "1.5em", lineHeight: 0 }}>
            üíí
          </Box>
          Bride's Family
        </ToggleButton>
      </ToggleButtonGroup>

      {/* H√¨nh ·∫£nh hai b√™n */}
      <Box
        sx={{
          paddingTop: 1.5,
          display: "flex",
          justifyContent: "center", // Canh gi·ªØa theo chi·ªÅu ngang
          alignItems: "center", // Canh gi·ªØa theo chi·ªÅu d·ªçc
          width: "100%",
          maxWidth: 990,
          gap: 2, // T·∫°o kho·∫£ng c√°ch gi·ªØa hai ·∫£nh
          flexDirection: { xs: "column", sm: "row" }, // Chuy·ªÉn sang c·ªôt tr√™n m√†n h√¨nh nh·ªè
        }}
      >
        {/* Ch·ªâ hi·ªÉn th·ªã h√¨nh ·∫£nh Bride n·∫øu kh√¥ng ph·∫£i l√† mobile ho·∫∑c n·∫øu l√† mobile v√† mu·ªën hi·ªÉn th·ªã */}
        {!isMobile || (isMobile && true) ? (
          <Box
            sx={{
              position: "relative",
              width: isMobile ? "90%" : "55%",
            }}
          >
            <img
              src={
                isSide
                  ? "/imgs/NhaTrai_LongAn.webp"
                  : isSide_Groom
                  ? "/imgs/NhaGai_LongAn.webp"
                  : "/imgs/NhaGai_BinhPhuoc.webp"
              }
              alt="Bride"
              style={{
                width: "100%",
                borderRadius: 8,
              }}
            />
            <Box
              sx={{
                position: "absolute",
                top: "66%",
                left: "50%",
                transform: "translateX(-50%)",
                paddingTop: 0.2,
                display: "flex",
                flexDirection: "row",
                textAlign: "center",
                alignItems: "center",
                justifyContent: "space-between", // ƒê·∫©y hai ch·ªØ ra xa hai b√™n
                width: isMobile ? "90%" : "80%", // M·ªü r·ªông v√πng ch·ª©a ch·ªØ
              }}
            >
              {/* Trung Nam (ƒë·∫©y v·ªÅ b√™n tr√°i) */}
              <motion.div
                animate={{
                  opacity: [1, 0.5, 1],
                }}
                transition={{
                  duration: 1.5,
                  repeat: Infinity,
                  repeatType: "loop",
                }}
                style={{
                  position: "absolute",
                  right: "55%", // ƒê·∫©y v·ªÅ tr√°i m·ªôt ch√∫t
                  textAlign: "right",
                }}
              >
                <Typography
                  sx={{
                    letterSpacing: "1px",
                    fontFamily: "Alex Brush, serif",
                    fontWeight: "bold",
                    fontSize: isMobile ? "20px" : "25px",
                    fontStyle: "italic",
                    color: "#3c5f48",
                    textShadow: "2px 2px 4px rgba(251, 66, 189, 0.418)",
                  }}
                >
                  {isSide ? "Trung Nam" : "Nguy·ªÖn Ng·ªçc"}
                </Typography>
              </motion.div>

              {/* Th·ªã Ng·ªçc (ƒë·∫©y v·ªÅ b√™n ph·∫£i) */}
              <motion.div
                animate={{
                  opacity: [1, 0.5, 1],
                }}
                transition={{
                  duration: 1.5,
                  repeat: Infinity,
                  repeatType: "loop",
                }}
                style={{
                  position: "absolute",
                  left: "55%", // ƒê·∫©y v·ªÅ ph·∫£i m·ªôt ch√∫t
                  textAlign: "left",
                }}
              >
                <Typography
                  sx={{
                    letterSpacing: "1px",
                    fontFamily: "Alex Brush, serif",
                    fontWeight: "bold",
                    fontSize: isMobile ? "20px" : "25px",
                    fontStyle: "italic",
                    color: "#3c5f48",
                    textShadow: "2px 2px 4px rgba(251, 66, 189, 0.418)",
                  }}
                >
                  {isSide ? "Nguy·ªÖn Ng·ªçc" : "Trung Nam"}
                </Typography>
              </motion.div>
            </Box>
            <Box
              sx={{
                position: "absolute",
                bottom: "7%",
                left: "18%",
                paddingTop: 0.2,
                width: isMobile ? "70%" : "60%",
                textAlign: "center",
              }}
            >
              <Typography
                sx={{
                  fontSize: isMobile ? "12px" : "15px",
                  fontStyle: "italic",
                  opacity: 0.8,
                  fontFamily: "EB Garamond, sans-serif",
                  color: "#557c70",
                }}
              >
                {isSide
                  ? "Hamlet 2, Long Thuan Commune, Thu Thua District, Long An Province, Vietnam"
                  : isSide_Groom
                  ? "Hamlet 2, Long Thuan Commune, Thu Thua District, Long An Province, Vietnam"
                  : "Minh Tan Hamlet, Tan Tien Commune, Dong Phu District, Binh Phuoc Province, Vietnam"}
                <a
                  href={
                    isSide
                      ? "https://maps.app.goo.gl/22zVbbXrDiAmT6NB6?g_st=com.google.maps.preview.copy"
                      : isSide_Groom
                      ? "https://maps.app.goo.gl/22zVbbXrDiAmT6NB6?g_st=com.google.maps.preview.copy"
                      : "https://maps.app.goo.gl/JvBjfF66bAd8xr3T6"
                  }
                  target="_blank"
                  rel="noopener noreferrer"
                  style={{
                    display: "inline-flex",
                    alignItems: "center",
                  }}
                >
                  <motion.div
                    animate={{
                      scale: [1, 1.2, 1],
                    }}
                    transition={{
                      duration: 1.5,
                      repeat: Infinity,
                      ease: "easeInOut",
                    }}
                  >
                    <LocationOnIcon
                      sx={{ fontSize: 18, cursor: "pointer", color: "#3d853f" }} // Lo·∫°i b·ªè marginLeft ƒë·ªÉ icon s√°t ngay ch·ªØ
                    />
                  </motion.div>
                </a>
              </Typography>
            </Box>
          </Box>
        ) : null}

        {/* Ch·ªâ hi·ªÉn th·ªã h√¨nh ·∫£nh Groom n·∫øu kh√¥ng ph·∫£i l√† mobile ho·∫∑c n·∫øu l√† mobile v√† mu·ªën hi·ªÉn th·ªã */}
        {!isMobile || (isMobile && true) ? (
          <Box sx={{ position: "relative", width: isMobile ? "90%" : "55%" }}>
            <img
              src="/imgs/Background_Gioithieu.webp"
              alt="Groom"
              style={{
                width: "100%",
                borderRadius: 8,
              }}
            />
            <Box
              sx={{
                position: "absolute",
                top: "5%",
                left: "50%",
                transform: "translate(-50%, -50%)",
                color: "white",
                fontSize: isMobile ? 20 : 24, // Gi·∫£m font size cho mobile
                fontWeight: "bold",
                textShadow: "2px 2px 4px rgba(0, 0, 0, 0.6)", // Th√™m b√≥ng cho ch·ªØ d·ªÖ nh√¨n h∆°n
              }}
            >
              <ButtonGroup
                variant="text"
                aria-label="Basic button group"
                sx={{ width: "100%" }}
              >
                <Button
                  onClick={() => setSelected(true)}
                  sx={{
                    flex: 1,
                    minWidth: "120px",
                    color: "#ffffff",
                    backgroundColor: "#a5a8a5",
                    fontWeight: selected ? "bold" : "normal",
                    textTransform: "none",
                    transition: "all 0.3s ease",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    gap: "6px",
                    //padding: "8px 16px",
                    "&:hover": {
                      backgroundColor: "#66bb6a",
                      textDecoration: "underline",
                    },
                    ...(selected && {
                      backgroundColor: "#3d853f",
                    }),
                  }}
                >
                  <Box
                    component="span"
                    sx={{ fontSize: "1.5em", lineHeight: 0 }}
                  >
                    ü§µ‚Äç‚ôÇÔ∏è
                  </Box>
                  <span>Groom</span>
                </Button>
                <Button
                  onClick={() => setSelected(false)}
                  sx={{
                    flex: 1,
                    minWidth: "120px",
                    color: "#ffffff",
                    backgroundColor: "#a5a8a5",
                    fontWeight: !selected ? "bold" : "normal",
                    textTransform: "none",
                    transition: "all 0.3s ease",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    gap: "6px",
                    "&:hover": {
                      backgroundColor: "#e91e63",
                      textDecoration: "underline",
                    },
                    ...(selected === false && {
                      backgroundColor: "#D81B60",
                    }),
                  }}
                >
                  <Box
                    component="span"
                    sx={{ fontSize: "1.5em", lineHeight: 0 }}
                  >
                    üë∞‚Äç‚ôÄÔ∏è
                  </Box>
                  <span>Bride</span>
                </Button>
              </ButtonGroup>
            </Box>
            {/* ·∫¢nh m·ªõi b√™n d∆∞·ªõi Button */}
            <Box
              sx={{
                position: "absolute",
                top: "12%", // ƒêi·ªÅu ch·ªânh v·ªã tr√≠ xu·ªëng d∆∞·ªõi Button
                left: "50%",
                transform: "translate(-50%, 0%)",
                width: "100%", // ƒê·∫£m b·∫£o h√¨nh g·∫ßn full ·∫£nh
                textAlign: "center",
              }}
            >
              {selected ? (
                <motion.img
                  src={"/imgs/DSC00540.webp"} // S·ª≠ d·ª•ng d·∫•u nh√°y ng∆∞·ª£c ƒë√∫ng c√°ch
                  alt="Extra"
                  whileHover={{ scale: 1.05 }} // Hi·ªáu ·ª©ng ph√≥ng to khi hover
                  transition={{ duration: 0.3 }} // Th·ªùi gian chuy·ªÉn ƒë·ªïi hi·ªáu ·ª©ng
                  style={{
                    width: !showFullGroom
                      ? isMobile
                        ? "67%"
                        : "55%"
                      : isMobile
                      ? "45%"
                      : "40%",
                    height: !showFullGroom
                      ? isMobile
                        ? "320px"
                        : "325px"
                      : isMobile
                      ? "200px"
                      : "220px",
                    borderRadius: 10,
                    objectFit: "cover", // Gi·ªØ h√¨nh kh√¥ng b·ªã m√©o
                  }}
                />
              ) : (
                <motion.img
                  src={"/imgs/DSC00590.webp"} // S·ª≠ d·ª•ng d·∫•u nh√°y ng∆∞·ª£c ƒë√∫ng c√°ch
                  alt="Extra"
                  whileHover={{ scale: 1.05 }} // Hi·ªáu ·ª©ng ph√≥ng to khi hover
                  transition={{ duration: 0.3 }} // Th·ªùi gian chuy·ªÉn ƒë·ªïi hi·ªáu ·ª©ng
                  style={{
                    width: !showFullBride
                      ? isMobile
                        ? "67%"
                        : "55%"
                      : isMobile
                      ? "45%"
                      : "40%",
                    height: !showFullBride
                      ? isMobile
                        ? "320px"
                        : "325px"
                      : isMobile
                      ? "200px"
                      : "220px",
                    borderRadius: 10,
                    objectFit: "cover", // Gi·ªØ h√¨nh kh√¥ng b·ªã m√©o
                  }}
                />
              )}
            </Box>

            {/* ƒêo·∫°n ch·ªØ b√™n d∆∞·ªõi ·∫£nh m·ªõi */}
            {selected ? (
              <Box
                ref={textRef}
                sx={{
                  position: "absolute",
                  top: !showFullGroom
                    ? isMobile
                      ? "67%"
                      : "60%"
                    : isMobile
                    ? "44%"
                    : "44%", // ƒê·∫©y ch·ªØ xu·ªëng d∆∞·ªõi h√¨nh
                  left: "50%",
                  transform: "translate(-50%, 0%)",
                  width: "80%",
                  textAlign: "center",
                  color: "#557c70",
                  fontSize: isMobile ? 15 : 16,
                  fontFamily: "EB Garamond, serif",
                }}
              >
                <>
                  <p
                    onClick={() => setShowFullGroom(!showFullGroom)}
                    style={{ cursor: "pointer", userSelect: "none" }}
                  >
                    {showFullGroom
                      ? groomText
                      : `${groomText.substring(0, 200)}...`}
                    <span style={{ color: "#c1b565", fontWeight: "bold" }}>
                      {showFullGroom ? " read less" : " read more"}
                    </span>
                  </p>
                  <b>
                    A steadfast Taurus combined with a fiery Aries ‚Äì a love that
                    is not only enduring but also full of excitement!
                  </b>
                </>
              </Box>
            ) : (
              <Box
                ref={textRef}
                sx={{
                  position: "absolute",
                  top: !showFullBride
                    ? isMobile
                      ? "67%"
                      : "60%"
                    : isMobile
                    ? "44%"
                    : "44%", // ƒê·∫©y ch·ªØ xu·ªëng d∆∞·ªõi h√¨nh
                  left: "50%",
                  transform: "translate(-50%, 0%)",
                  width: "80%",
                  textAlign: "center",
                  color: "#557c70",
                  fontSize: isMobile ? 15 : 16,
                  fontFamily: "EB Garamond, serif",
                }}
              >
                <>
                  <p
                    onClick={() => setShowFullBride(!showFullBride)}
                    style={{ cursor: "pointer", userSelect: "none" }}
                  >
                    {showFullBride
                      ? brideText
                      : `${brideText.substring(0, 200)}...`}
                    <span style={{ color: "#c1b565", fontWeight: "bold" }}>
                      {showFullBride ? " read less" : " read more"}
                    </span>
                  </p>
                  <p>
                    <b>
                      A steadfast Taurus combined with a fiery Aries ‚Äì a love
                      that is not only enduring but also full of excitement!
                    </b>
                  </p>
                </>
              </Box>
            )}
          </Box>
        ) : null}
      </Box>
    </Box>
  );
};

export default Invitations;
